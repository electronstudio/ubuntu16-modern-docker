FROM --platform=linux/386 ubuntu:16.04

# Update package lists and install basic dependencies
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    git \
    build-essential \
    ca-certificates \
    libssl-dev \
    unzip \
    libasound2-dev \
    mesa-common-dev \
    libx11-dev \
    libxrandr-dev \
    libxi-dev \
    xorg-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libwayland-dev \
    libxkbcommon-dev \
    openjdk-8-jdk \
    software-properties-common \
    apt-transport-https \
    gnupg \
    lsb-release \
    libgles2-mesa-dev \
    zlib1g-dev libncurses-dev libgdbm-dev libnss3-dev libreadline6-dev libffi-dev libsqlite3-dev libbz2-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js 20 (32-bit unofficial build)
RUN curl -fsSL https://unofficial-builds.nodejs.org/download/release/v20.18.1/node-v20.18.1-linux-x86.tar.gz | tar -xz -C /usr/local --strip-components=1

# Install newer Git (via PPA)
RUN add-apt-repository ppa:git-core/ppa \
    && apt-get update \
    && apt-get install -y git \
    && rm -rf /var/lib/apt/lists/*

# Install modern CMake
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add - \
    && echo 'deb https://apt.kitware.com/ubuntu/ xenial main' | tee /etc/apt/sources.list.d/kitware.list \
    && apt-get update \
    && apt-get install -y cmake \
    && rm -rf /var/lib/apt/lists/*

# Install multiple Python versions
ARG PYTHON_VERSIONS="3.13.6 3.12.9 3.11.13 3.10.18"
RUN for version in $PYTHON_VERSIONS; do \
        wget https://www.python.org/ftp/python/$version/Python-$version.tgz && \
        tar -xf Python-$version.tgz && \
        cd Python-$version && \
        ./configure --enable-optimizations && \
        make -j 8 && \
        make altinstall && \
        cd .. && \
        rm -rf Python-$version*; \
    done

# Install SDL
RUN wget https://github.com/libsdl-org/SDL/archive/refs/tags/release-2.32.8.tar.gz \
    && tar xvfz release-2.32.8.tar.gz \
    && mkdir build \
    && cd build \
    && cmake ../SDL-release-2.32.8 -DSDL_SHARED=OFF -DSDL_STATIC=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release \
    && cmake --build . --config Release \
    && cmake --install . \
    && cd .. && rm -rf build SDL-release-2.32.8 release-2.32.8.tar.gz

# Install PyPy 3.10 and 3.11
RUN wget https://downloads.python.org/pypy/pypy3.10-v7.3.19-linux32.tar.bz2 \
    && wget https://downloads.python.org/pypy/pypy3.11-v7.3.20-linux32.tar.bz2 \
    && tar -xjf pypy3.10-v7.3.19-linux32.tar.bz2 -C /opt \
    && tar -xjf pypy3.11-v7.3.20-linux32.tar.bz2 -C /opt \
    && ln -s /opt/pypy3.10-v7.3.19-linux32/bin/pypy3 /usr/local/bin/pypy3.10 \
    && ln -s /opt/pypy3.11-v7.3.20-linux32/bin/pypy3 /usr/local/bin/pypy3.11 \
    && /usr/local/bin/pypy3.10 -m ensurepip \
    && /usr/local/bin/pypy3.11 -m ensurepip \
    && ln -s /opt/pypy3.10-v7.3.19-linux32/bin/pip3 /usr/local/bin/pip-pypy3.10 \
    && ln -s /opt/pypy3.11-v7.3.20-linux32/bin/pip3 /usr/local/bin/pip-pypy3.11 \
    && rm pypy3.10-v7.3.19-linux32.tar.bz2 pypy3.11-v7.3.20-linux32.tar.bz2

# Set working directory
WORKDIR /workspace

# Default command
CMD ["/bin/bash"]